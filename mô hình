from tensorflow.keras.optimizers import RMSprop
model.compile(optimizer=RMSprop(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])
steps_per_epoch = len(train_generator)
validation_steps = len(valid_generator)

EPOCHS = 50
history = model.fit(
    train_generator,
    steps_per_epoch=steps_per_epoch,
    epochs=EPOCHS,
    validation_data=valid_generator,
    validation_steps=validation_steps,
    callbacks=[tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)]
)
from google.colab import files
from keras.preprocessing import image
%matplotlib inline
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np

uploaded = files.upload()
label = ['Ô tô', 'Xe máy']
for fn in uploaded.keys():
    path = '/content/' + fn
    # Hiển thị hình ảnh
    plt.imshow(mpimg.imread(path))
    plt.axis('off')  # Tắt hiển thị trục
    plt.show()

    # Tải và xử lý hình ảnh
    img = image.load_img(path, target_size=(256, 256))  # Đảm bảo kích thước phù hợp với mô hình
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = x / 255.0  # Chuẩn hóa hình ảnh giống như trong ImageDataGenerator

    # Dự đoán với mô hình
    y_predict = model.predict(x)
    print('Dự đoán:', y_predict)

    predicted_label = label[np.argmax(y_predict)]
    print('Giá trị dự đoán:', predicted_label)

    if predicted_label == 'Ô tô':
        print('Không vi phạm')
    else:
        print('Vi phạm')
